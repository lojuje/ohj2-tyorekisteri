package rekisteriTietokanta.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.List;

import static org.junit.Assert.*;
import org.junit.*;
import rekisteriTietokanta.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.14 09:29:22 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class AihealueetTest {



  // Generated by ComTest BEGIN
  /** testAnnaAihealueet55 */
  @Test
  public void testAnnaAihealueet55() {    // Aihealueet: 55
    Aihealue a1 = new Aihealue(), a2 = new Aihealue(); 
    Aihealueet aih = new Aihealueet(); 
    aih.lisaa(a1); 
    aih.lisaa(a2); 
    Aihealue[] testi1 = aih.annaAihealueet(); 
    assertEquals("From: Aihealueet line: 61", a1, testi1[0]); 
    assertEquals("From: Aihealueet line: 62", a2, testi1[1]); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAihealueetListassa73 */
  @Test
  public void testAnnaAihealueetListassa73() {    // Aihealueet: 73
    Aihealue a3 = new Aihealue(), a4 = new Aihealue(); 
    Aihealueet aih2 = new Aihealueet(); 
    aih2.lisaa(a3); 
    aih2.lisaa(a4); 
    List<Aihealue> testi2 = aih2.annaAihealueetListassa(); 
    assertEquals("From: Aihealueet line: 79", a3, testi2.get(0)); 
    assertEquals("From: Aihealueet line: 80", a4, testi2.get(1)); 
    assertEquals("From: Aihealueet line: 81", 2, testi2.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa99 */
  @Test
  public void testLisaa99() {    // Aihealueet: 99
    Aihealueet aihealueet = new Aihealueet(); 
    Aihealue kouluhommat = new Aihealue(), kouluhommat2 = new Aihealue(); 
    assertEquals("From: Aihealueet line: 102", 0, aihealueet.getLkm()); 
    aihealueet.lisaa(kouluhommat); assertEquals("From: Aihealueet line: 103", 1, aihealueet.getLkm()); 
    aihealueet.lisaa(kouluhommat2); assertEquals("From: Aihealueet line: 104", 2, aihealueet.getLkm()); 
    aihealueet.lisaa(kouluhommat); assertEquals("From: Aihealueet line: 105", 3, aihealueet.getLkm()); 
    assertEquals("From: Aihealueet line: 106", kouluhommat, aihealueet.anna(0)); 
    assertEquals("From: Aihealueet line: 107", kouluhommat2, aihealueet.anna(1)); 
    assertEquals("From: Aihealueet line: 108", kouluhommat, aihealueet.anna(2)); 
    assertEquals("From: Aihealueet line: 109", false, aihealueet.anna(1) == kouluhommat); 
    assertEquals("From: Aihealueet line: 110", true, aihealueet.anna(1) == kouluhommat2); 
    aihealueet.lisaa(kouluhommat); assertEquals("From: Aihealueet line: 111", 4, aihealueet.getLkm()); 
    aihealueet.lisaa(kouluhommat); assertEquals("From: Aihealueet line: 112", 5, aihealueet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna140 */
  @Test
  public void testAnna140() {    // Aihealueet: 140
    Aihealueet aihealueet = new Aihealueet(); 
    Aihealue kouluhommat = new Aihealue(), kouluhommat2 = new Aihealue(); 
    aihealueet.lisaa(kouluhommat); 
    aihealueet.lisaa(kouluhommat2); 
    assertEquals("From: Aihealueet line: 145", kouluhommat, aihealueet.anna(0)); 
    assertEquals("From: Aihealueet line: 146", kouluhommat2, aihealueet.anna(1)); 
    assertEquals("From: Aihealueet line: 147", false, aihealueet.anna(1) == kouluhommat); 
    assertEquals("From: Aihealueet line: 148", true, aihealueet.anna(1) == kouluhommat2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaIdnMukaan166 */
  @Test
  public void testAnnaIdnMukaan166() {    // Aihealueet: 166
    Aihealueet aihealueet = new Aihealueet(); 
    Aihealue kouluhommat = new Aihealue(), kouluhommat2 = new Aihealue(); 
    kouluhommat.rekisteroi(); 
    kouluhommat2.rekisteroi(); 
    aihealueet.lisaa(kouluhommat); 
    aihealueet.lisaa(kouluhommat2); 
    assertEquals("From: Aihealueet line: 173", kouluhommat, aihealueet.annaIdnMukaan(3)); 
    assertEquals("From: Aihealueet line: 174", kouluhommat2, aihealueet.annaIdnMukaan(4)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta195 
   * @throws SisaltoException when error
   */
  @Test
  public void testLueTiedostosta195() throws SisaltoException {    // Aihealueet: 195
    Aihealueet aihealueet = new Aihealueet(); 
    Aihealue t1 = new Aihealue(), t2 = new Aihealue(); 
    t1.asetaKategoria(); 
    t1.rekisteroi(); 
    t2.asetaKategoria(); 
    t2.rekisteroi(); 
    String hakemisto = "testirekisteri"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi + ".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    aihealueet.lueTiedostosta(tiedNimi); 
    fail("Aihealueet: 211 Did not throw SisaltoException");
    } catch(SisaltoException _e_){ _e_.getMessage(); }
    File ftied2 = new File(tiedNimi + ".dat"); 
    aihealueet.lisaa(t1); 
    aihealueet.lisaa(t2); 
    aihealueet.talleta(); 
    assertEquals("From: Aihealueet line: 216", t1, aihealueet.anna(0)); 
    assertEquals("From: Aihealueet line: 217", t2.toString(), aihealueet.anna(1).toString()); 
    aihealueet.lisaa(t2); 
    aihealueet.talleta(); 
    assertEquals("From: Aihealueet line: 220", true, ftied2.delete()); 
    assertEquals("From: Aihealueet line: 221", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLkm312 */
  @Test
  public void testGetLkm312() {    // Aihealueet: 312
    Aihealueet aihealueet = new Aihealueet(); 
    Aihealue t1 = new Aihealue(), t2 = new Aihealue(), t3 = new Aihealue(); 
    aihealueet.lisaa(t1); 
    aihealueet.lisaa(t2); 
    aihealueet.lisaa(t3); 
    assertEquals("From: Aihealueet line: 318", 3, aihealueet.getLkm()); 
    Aihealue t4 = new Aihealue(); 
    aihealueet.lisaa(t4); 
    assertEquals("From: Aihealueet line: 321", 4, aihealueet.getLkm()); 
  } // Generated by ComTest END
}