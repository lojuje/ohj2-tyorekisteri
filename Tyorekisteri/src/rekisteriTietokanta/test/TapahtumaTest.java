package rekisteriTietokanta.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import rekisteriTietokanta.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.14 10:09:21 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TapahtumaTest {



  // Generated by ComTest BEGIN
  /** testTapahtuma62 */
  @Test
  public void testTapahtuma62() {    // Tapahtuma: 62
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 68", 1, uusi.getAihealueID()); 
    assertEquals("From: Tapahtuma line: 69", 1, uusi.getToimintoID()); 
    uusi.getLopetusAika().equals(lopetus); 
    uusi.getAloitusAika().equals(aloitus); 
    uusi.getAloitusPaiva().equals(aloitusP); 
    uusi.getLopetusPaiva().equals(lopetusP); 
    assertEquals("From: Tapahtuma line: 74", 15, uusi.annaViikkoNumero()); 
    assertEquals("From: Tapahtuma line: 75", 3, uusi.annaViikonPaivaINT()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTapahtuma96 */
  @Test
  public void testTapahtuma96() {    // Tapahtuma: 96
    Tapahtuma t = new Tapahtuma(1, 2), t2 = new Tapahtuma(2, 1); 
    assertEquals("From: Tapahtuma line: 98", 1, t.getToimintoID()); 
    assertEquals("From: Tapahtuma line: 99", 2, t2.getToimintoID()); 
    assertEquals("From: Tapahtuma line: 100", 2, t.getAihealueID()); 
    assertEquals("From: Tapahtuma line: 101", 1, t2.getAihealueID()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLuoTestiTapahtuma115 */
  @Test
  public void testLuoTestiTapahtuma115() {    // Tapahtuma: 115
    Tapahtuma t = new Tapahtuma(), t2 = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    t2.luoTestiTapahtuma(2, 1); 
    assertEquals("From: Tapahtuma line: 119", 1, t.getId()); 
    assertEquals("From: Tapahtuma line: 120", 2, t2.getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi147 */
  @Test
  public void testRekisteroi147() {    // Tapahtuma: 147
    Tapahtuma t = new Tapahtuma(), t2 = new Tapahtuma(); 
    t.rekisteroi(); 
    t2.rekisteroi(); 
    assertEquals("From: Tapahtuma line: 151", 12, t.getId()); 
    assertEquals("From: Tapahtuma line: 152", 13, t2.getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi166 */
  @Test
  public void testRekisteroi166() {    // Tapahtuma: 166
    Tapahtuma t = new Tapahtuma(); 
    t.rekisteroi(1000); 
    assertEquals("From: Tapahtuma line: 169", 1000, t.getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAika204 */
  @Test
  public void testAnnaAika204() {    // Tapahtuma: 204
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 207", "12:30 3.4.2020 - 15:0 3.4.2020", t.annaAika()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPaivaMaaratOn238 */
  @Test
  public void testPaivaMaaratOn238() {    // Tapahtuma: 238
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 241", "3.4.2020", t.paivaMaaratOn()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAloitusPaiva263 */
  @Test
  public void testAnnaAloitusPaiva263() {    // Tapahtuma: 263
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 266", "3.4.2020", t.annaAloitusPaiva()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaLopetusPaiva278 */
  @Test
  public void testAnnaLopetusPaiva278() {    // Tapahtuma: 278
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 281", "3.4.2020", t.annaLopetusPaiva()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAloitusAika294 */
  @Test
  public void testAnnaAloitusAika294() {    // Tapahtuma: 294
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 297", "12:30", t.annaAloitusAika()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaLopetusAika310 */
  @Test
  public void testAnnaLopetusAika310() {    // Tapahtuma: 310
    Tapahtuma t = new Tapahtuma(); 
    t.luoTestiTapahtuma(1, 2); 
    assertEquals("From: Tapahtuma line: 313", "15:0", t.annaLopetusAika()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAloitusAikaHH325 */
  @Test
  public void testAnnaAloitusAikaHH325() {    // Tapahtuma: 325
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 331", "15", uusi.annaAloitusAikaHH()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAloitusAikaMM343 */
  @Test
  public void testAnnaAloitusAikaMM343() {    // Tapahtuma: 343
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 349", "10", uusi.annaAloitusAikaMM()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaLopetusAikaHH361 */
  @Test
  public void testAnnaLopetusAikaHH361() {    // Tapahtuma: 361
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 367", "18", uusi.annaLopetusAikaHH()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaLopetusAikaMM379 */
  @Test
  public void testAnnaLopetusAikaMM379() {    // Tapahtuma: 379
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 385", "0", uusi.annaLopetusAikaMM()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetId417 */
  @Test
  public void testGetId417() {    // Tapahtuma: 417
    Tapahtuma a = new Tapahtuma(); 
    a.rekisteroi(); 
    assertEquals("From: Tapahtuma line: 420", 5, a.getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAloitusAika432 */
  @Test
  public void testGetAloitusAika432() {    // Tapahtuma: 432
    Tapahtuma a = new Tapahtuma(); 
    a.luoTestiTapahtuma(1, 2); 
    int[] k = a.getAloitusAika(); 
    assertEquals("From: Tapahtuma line: 436", 12, k[0]); 
    assertEquals("From: Tapahtuma line: 437", 30, k[1]); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLopetusAika449 */
  @Test
  public void testGetLopetusAika449() {    // Tapahtuma: 449
    Tapahtuma a = new Tapahtuma(); 
    a.luoTestiTapahtuma(1, 2); 
    int[] k = a.getLopetusAika(); 
    assertEquals("From: Tapahtuma line: 453", 15, k[0]); 
    assertEquals("From: Tapahtuma line: 454", 0, k[1]); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAloitusPaiva466 */
  @Test
  public void testGetAloitusPaiva466() {    // Tapahtuma: 466
    Tapahtuma a = new Tapahtuma(); 
    a.luoTestiTapahtuma(1, 2); 
    int[] b = a.getAloitusPaiva(); 
    assertEquals("From: Tapahtuma line: 470", 3, b[0]); 
    assertEquals("From: Tapahtuma line: 471", 4, b[1]); 
    assertEquals("From: Tapahtuma line: 472", 2020, b[2]); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLopetusPaiva484 */
  @Test
  public void testGetLopetusPaiva484() {    // Tapahtuma: 484
    Tapahtuma a = new Tapahtuma(); 
    a.luoTestiTapahtuma(1, 2); 
    int[] t = a.getLopetusPaiva(); 
    assertEquals("From: Tapahtuma line: 488", 3, t[0]); 
    assertEquals("From: Tapahtuma line: 489", 4, t[1]); 
    assertEquals("From: Tapahtuma line: 490", 2020, t[2]); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetToimintoID505 */
  @Test
  public void testGetToimintoID505() {    // Tapahtuma: 505
    Tapahtuma t = new Tapahtuma(1, 2), t2 = new Tapahtuma(2, 1); 
    assertEquals("From: Tapahtuma line: 507", 1, t.getToimintoID()); 
    assertEquals("From: Tapahtuma line: 508", 2, t2.getToimintoID()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAihealueID519 */
  @Test
  public void testGetAihealueID519() {    // Tapahtuma: 519
    Tapahtuma t = new Tapahtuma(1, 2), t2 = new Tapahtuma(2, 1); 
    assertEquals("From: Tapahtuma line: 521", 2, t.getAihealueID()); 
    assertEquals("From: Tapahtuma line: 522", 1, t2.getAihealueID()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString534 */
  @Test
  public void testToString534() {    // Tapahtuma: 534
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3);  
    assertEquals("From: Tapahtuma line: 541", false, uusi.toString().startsWith("1|15:10-18:00|12.4.2020-13.4.2020|1|1|15|3")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaViikonPaiva562 */
  @Test
  public void testAnnaViikonPaiva562() {    // Tapahtuma: 562
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 568", "3", uusi.annaViikonPaiva()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaViikonPaivaINT579 */
  @Test
  public void testAnnaViikonPaivaINT579() {    // Tapahtuma: 579
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    assertEquals("From: Tapahtuma line: 585", 3, uusi.annaViikonPaivaINT()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse598 */
  @Test
  public void testParse598() {    // Tapahtuma: 598
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma uusi = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    uusi.parse("   1 |  15:10-18:00  |  12.4.2020 | 13.4.2020 | 1 | 1 | 15 | 3"); 
    assertEquals("From: Tapahtuma line: 606", 1, uusi.getId()); 
    assertEquals("From: Tapahtuma line: 607", false, uusi.toString().startsWith("1|15:10-18:00|12.4.2020-13.4.2020|1|1|15|3")); 
  } // Generated by ComTest END
}