package rekisteriTietokanta.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import rekisteriTietokanta.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.14 10:38:42 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TyorekisteriTest {



  // Generated by ComTest BEGIN
  /** testGetTapahtumia32 */
  @Test
  public void testGetTapahtumia32() {    // Tyorekisteri: 32
    Tyorekisteri tyo = new Tyorekisteri(); 
    Tapahtuma t = new Tapahtuma(), t2 = new Tapahtuma(); 
    tyo.lisaa(t); 
    tyo.lisaa(t2); 
    assertEquals("From: Tyorekisteri line: 37", 2, tyo.getTapahtumia()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetAihealueita49 
   * @throws SisaltoException when error
   */
  @Test
  public void testGetAihealueita49() throws SisaltoException {    // Tyorekisteri: 49
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue(), a2 = new Aihealue(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    assertEquals("From: Tyorekisteri line: 56", 2, tyo.getAihealueita()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetToimintoja68 */
  @Test
  public void testGetToimintoja68() {    // Tyorekisteri: 68
    Tyorekisteri tyo = new Tyorekisteri(); 
    Toiminto t = new Toiminto(), t2 = new Toiminto(); 
    tyo.lisaa(t); 
    tyo.lisaa(t2); 
    assertEquals("From: Tyorekisteri line: 73", 2, tyo.getToimintoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa105 
 * @throws SisaltoException e*/
  @Test
  public void testLisaa105() throws SisaltoException {    // Tyorekisteri: 105
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue(), a2 = new Aihealue(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    assertEquals("From: Tyorekisteri line: 110", a, tyo.annaAihealue(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa122 */
  @Test
  public void testLisaa122() {    // Tyorekisteri: 122
    Tyorekisteri tyo = new Tyorekisteri(); 
    Tapahtuma t = new Tapahtuma(), t2 = new Tapahtuma(); 
    tyo.lisaa(t); 
    tyo.lisaa(t2); 
    assertEquals("From: Tyorekisteri line: 127", 2, tyo.getTapahtumia()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa139 */
  @Test
  public void testLisaa139() {    // Tyorekisteri: 139
    Tyorekisteri tyo = new Tyorekisteri(); 
    Toiminto t = new Toiminto(), t2 = new Toiminto(); 
    tyo.lisaa(t); 
    tyo.lisaa(t2); 
    assertEquals("From: Tyorekisteri line: 144", 2, tyo.getToimintoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAihealue158 
 * @throws SisaltoException e*/
  @Test
  public void testAnnaAihealue158() throws SisaltoException {    // Tyorekisteri: 158
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue(), a2 = new Aihealue(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    assertEquals("From: Tyorekisteri line: 163", a, tyo.annaAihealue(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAihealueet174 
 * @throws SisaltoException e*/
  @Test
  public void testAnnaAihealueet174() throws SisaltoException {    // Tyorekisteri: 174
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue(), a2 = new Aihealue(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    List<Aihealue> uusi = tyo.annaAihealueet(); 
    assertEquals("From: Tyorekisteri line: 180", 2, uusi.size()); 
    assertEquals("From: Tyorekisteri line: 181", a, uusi.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTapahtumanAihealue193 
 * @throws SisaltoException e*/
  @Test
  public void testTapahtumanAihealue193() throws SisaltoException {    // Tyorekisteri: 193
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue();
    a.rekisteroi(); 
    a.asetaKategoria(); 
    tyo.lisaa(a); 
    assertEquals("From: Tyorekisteri line: 199", null, tyo.tapahtumanAihealue(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTapahtumanToiminto211 */
  @Test
  public void testTapahtumanToiminto211() {    // Tyorekisteri: 211
    Tyorekisteri tyo = new Tyorekisteri(); 
    Toiminto t = new Toiminto(); 
    t.rekisteroi(); 
    t.luoTESTI_Toiminto(); 
    tyo.lisaa(t); 
    assertEquals("From: Tyorekisteri line: 217", null, tyo.tapahtumanToiminto(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTapahtuma231 */
  @Test
  public void testAnnaTapahtuma231() {    // Tyorekisteri: 231
    Tyorekisteri tyo = new Tyorekisteri(); 
    Tapahtumat tap = new Tapahtumat(); 
    Tapahtuma t = new Tapahtuma(); 
    t.rekisteroi(); 
    t.luoTestiTapahtuma(1, 2); 
    tap.lisaa(t); 
    tyo.lisaa(t); 
    assertEquals("From: Tyorekisteri line: 239", t, tyo.annaTapahtuma(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaToiminto251 */
  @Test
  public void testAnnaToiminto251() {    // Tyorekisteri: 251
    Tyorekisteri tyo = new Tyorekisteri(); 
    Toiminto a = new Toiminto(), a2 = new Toiminto(); 
    a.rekisteroi(); 
    a2.rekisteroi(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    assertEquals("From: Tyorekisteri line: 258", a, tyo.annaToiminto(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTapahtumat270 */
  @Test
  public void testAnnaTapahtumat270() {    // Tyorekisteri: 270
    Tyorekisteri tyo = new Tyorekisteri(); 
    Tapahtuma a = new Tapahtuma(), a2 = new Tapahtuma(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    List<Tapahtuma> uusi = tyo.annaTapahtumat(); 
    assertEquals("From: Tyorekisteri line: 276", 2, uusi.size()); 
    assertEquals("From: Tyorekisteri line: 277", a2, uusi.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaToiminnat290 */
  @Test
  public void testAnnaToiminnat290() {    // Tyorekisteri: 290
    Tyorekisteri tyo = new Tyorekisteri(); 
    int[] aloitus = { 15, 10 } ; 
    int[] aloitusP = { 12, 4, 2020 } ; 
    int[] lopetus = { 18, 0 } ; 
    int[] lopetusP = { 13, 4, 2020 } ; 
    Tapahtuma tapaht = new Tapahtuma(aloitus, aloitusP, lopetus, lopetusP, 1, 1, 15, 3); 
    Toiminto a = new Toiminto(); 
    a.rekisteroi(); 
    tyo.lisaa(a); 
    List<Toiminto> uusi = tyo.annaToiminnat(tapaht); 
    assertEquals("From: Tyorekisteri line: 303", 0, uusi.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaToiminnat316 */
  @Test
  public void testAnnaToiminnat316() {    // Tyorekisteri: 316
    Tyorekisteri tyo = new Tyorekisteri(); 
    Toiminto a = new Toiminto(), a2 = new Toiminto(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    List<Toiminto> uusi = tyo.annaToiminnat(); 
    assertEquals("From: Tyorekisteri line: 322", 2, uusi.size()); 
    assertEquals("From: Tyorekisteri line: 323", a2, uusi.get(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta353 
   * @throws SisaltoException when error
   */
  @Test
  public void testLueTiedostosta353() throws SisaltoException {    // Tyorekisteri: 353
    Tyorekisteri tyorekisteri = new Tyorekisteri(); 
    Aihealue a1 = new Aihealue(); a1.rekisteroi(); a1.asetaKategoria(); 
    Aihealue a2 = new Aihealue(); a2.rekisteroi(); a2.asetaKategoria(); 
    Toiminto toi1 = new Toiminto(); toi1.rekisteroi(); toi1.luoTESTI_Toiminto(); 
    Toiminto toi2 = new Toiminto(); toi2.rekisteroi(); toi2.luoTESTI_Toiminto(); 
    Tapahtuma t1 = new Tapahtuma(); t1.luoTestiTapahtuma(1, 1); 
    Tapahtuma t2 = new Tapahtuma(); t2.luoTestiTapahtuma(2, 2); 
    String hakemisto = "testirekisteri"; 
    File dir = new File(hakemisto); 
    File ftied = new File(hakemisto+"/tapahtumat.dat"); 
    File fhtied = new File(hakemisto+"/toiminnat.dat"); 
    File fatied = new File(hakemisto+"/aihealueet.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    fatied.delete(); 
    try {
    tyorekisteri.lueTiedostosta(hakemisto); 
    fail("Tyorekisteri: 378 Did not throw SisaltoException");
    } catch(SisaltoException _e_){ _e_.getMessage(); }
    tyorekisteri.lisaa(a1); 
    tyorekisteri.lisaa(a2); 
    tyorekisteri.lisaa(toi1); 
    tyorekisteri.lisaa(toi2); 
    tyorekisteri.lisaa(t1); 
    tyorekisteri.lisaa(t2); 
    tyorekisteri.talleta(); 
    tyorekisteri = new Tyorekisteri(); 
    tyorekisteri.lueTiedostosta(hakemisto); 
    tyorekisteri.talleta(); 
    assertEquals("From: Tyorekisteri line: 391", true, ftied.delete()); 
    assertEquals("From: Tyorekisteri line: 392", true, fhtied.delete()); 
    assertEquals("From: Tyorekisteri line: 393", true, fatied.delete()); 
    File fbak = new File(hakemisto+"/tapahtumat.bak"); 
    assertEquals("From: Tyorekisteri line: 395", false, fbak.delete()); 
    assertEquals("From: Tyorekisteri line: 396", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaIdnMukaan553 
 * @throws SisaltoException e*/
  @Test
  public void testAnnaIdnMukaan553() throws SisaltoException {    // Tyorekisteri: 553
    Tyorekisteri tyo = new Tyorekisteri(); 
    Aihealue a = new Aihealue(), a2 = new Aihealue(); 
    a.rekisteroi(); 
    a2.rekisteroi(); 
    tyo.lisaa(a); 
    tyo.lisaa(a2); 
    assertEquals("From: Tyorekisteri line: 561", a, tyo.annaIdnMukaan(1)); 
  } // Generated by ComTest END
}